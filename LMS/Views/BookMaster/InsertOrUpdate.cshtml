@using LMS.Utilities;
@model LMS.Models.BookMaster
@{
   Layout = null;
   ViewBag.Title = "Add BookFine";
}

@Styles.Render("~/Content/css")

@using (Html.BeginForm("InsertUpdateOrDelete", "BookMaster", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
   @Html.HiddenFor(model => model.Id)
   <div class="modal-dialog modal-dialog-centered .modal-dialog-scrollable" role="document">
      <div class="modal-content">
         <div class="modal-header">
            <h5 class="modal-title">
               BookFine Master</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
               <span aria-hidden="true">&times;</span>
            </button>
         </div>
         <div class="container">
            <div class="row modal-body">
               <div class="form-group">
                  @Html.LabelFor(model => model.Name, new { @class = "control-label" })
                  @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.Name)
               </div>
               <div class="form-group col-sm-6">
                  @Html.LabelFor(model => model.BookTypeId, new { @class = "control-label" })
                  @Html.DropDownListFor(model => model.BookTypeId, DropdownListHelper.DDLForBookTypeMaster(), "Select BookType", new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.BookTypeId)
               </div>
               <div class="form-group col-sm-6">
                  @Html.LabelFor(model => model.AuthorId, new { @class = "control-label" })
                  @Html.DropDownListFor(model => model.AuthorId, DropdownListHelper.DDLForAuthorMaster(), "Select Author", new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.BookTypeId)
               </div>
               <div class="form-group col-sm-6">
                  @Html.LabelFor(model => model.Publisher, new { @class = "control-label" })
                  @Html.EditorFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.Publisher)
               </div>
               <div class="form-group col-sm-6">
                  @Html.LabelFor(model => model.PublishDate, new { @class = "control-label" })
                  @Html.EditorFor(model => model.PublishDate, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.PublishDate)
               </div>
               <div class="form-group col-sm-6">
                  @Html.LabelFor(model => model.Edition, new { @class = "control-label" })
                  @Html.EditorFor(model => model.Edition, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.Edition)
               </div>
               <div class="form-group col-sm-6">
                  @Html.LabelFor(model => model.ISBN, new { @class = "control-label" })
                  @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.ISBN)
               </div>
               <div class="form-group col-sm-6">
                  @Html.LabelFor(model => model.Price, new { @class = "control-label" })
                  @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.Price)
               </div>
            </div>
         </div>
         <div class="modal-footer">
            <button type="submit" class="btn btn-primary">
               Save changes</button>
            <button type="reset" class="btn btn-secondary">
               Reset</button>
            <button type="button" class="btn btn-danger" data-dismiss="modal">
               Close</button>
         </div>
      </div>
   </div>
}
@section Scripts {
   @Scripts.Render("~/bundles/jquery")
   @Scripts.Render("~/bundles/jqueryval")
   @Scripts.Render("~/bundles/bootstrap")
   @Scripts.Render("~/bundles/custom")
}
