@using LMS.Utilities;
@model LMS.Models.BookIssue
@{
   Layout = null;
   ViewBag.Title = "Add BookFine";
}
<link href="~/Content/bootstrap.min.css" rel="stylesheet" type="text/css" />
@using (Html.BeginForm("IssueBook", "Book", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
   if (Model != null && Model.IssuedOn != null && Model.IssuedOn != DateTime.MinValue && Model.IssuedOn.AddDays(Utility.MAX_DAYS_FOR_ISSUE) < DateTime.Now)
   {
   <label class="errMsg">Needs to collect Fine for the Book!!!</label>
   }
   <div class="row">
      @Html.HiddenFor(model => model.Id)
      <div class="form-group col-sm-12">
         @Html.LabelFor(model => model.BookCodeId, new { @class = "control-label" })
         @Html.DropDownListFor(model => model.BookCodeId, DropdownListHelper.DDLForBookCodeMaster(Model.BookCodeId), "Select BookCode", new { @class = "form-control" })
         @Html.ValidationMessageFor(model => model.BookCodeId)
      </div>
      <div class="form-group col-sm-12">
         @Html.LabelFor(model => model.IssuedFor, new { @class = "control-label" })
         @Html.DropDownListFor(model => model.IssuedFor, DropdownListHelper.DDLForUserMaster(), "Select Issued For", new { @class = "form-control" })
         @Html.ValidationMessageFor(model => model.IssuedFor)
      </div>
      <div class="form-group col-sm-12">
         @Html.LabelFor(model => model.IssuedBy, new { @class = "control-label" })
         @Html.DropDownListFor(model => model.IssuedBy, DropdownListHelper.DDLForIssueBook(), "Select Issued By", new { @class = "form-control" })
         @Html.ValidationMessageFor(model => model.IssuedBy)
      </div>
      @if (Model.Id != 0)
      {
      <div class="form-group col-sm-12">
         @Html.LabelFor(model => model.IssuedOn, new { @class = "control-label" })
         @Html.EditorFor(model => model.IssuedOn, new { @class = "form-control", @id = "IssuedOn", @type = "date" })
      </div>
      <div class="form-group col-sm-12">
         @Html.LabelFor(model => model.ReceivedBy, new { @class = "control-label" })
         @Html.DropDownListFor(model => model.ReceivedBy, DropdownListHelper.DDLForIssueBook(), "Select Received By", new { @class = "form-control" })
         @Html.ValidationMessageFor(model => model.ReceivedBy)
      </div>
      if (Model.ReceivedBy != 0)
      {
         <div class="form-group col-sm-12">
            @Html.LabelFor(model => model.ReturnedOn, new { @class = "control-label" })
            @Html.EditorFor(model => model.ReturnedOn, new { @class = "form-control", @id = "ReturnedOn", @type = "date" })
         </div>
      }
      }
      <div class="form-group col-sm-12">
         @Html.LabelFor(model => model.Remarks, new { @class = "control-label" })
         @Html.EditorFor(model => model.Remarks, new { @class = "form-control" })
         @Html.ValidationMessageFor(model => model.Remarks)
      </div>
   </div>
   <hr class="mb-2 mt-0"/>
   <div class="form-group col-sm-12 ">
      <button type="button" class="btn btn-danger mx-1 pull-right" onclick="closeJQryDlg()">Close</button>
      <button type="submit" class="btn btn-primary mx-1 pull-right">Save changes</button>
      <button type="reset" class="btn btn-secondary mx-1 pull-right">Reset</button>
   </div>

   @section Scripts {
      @Scripts.Render("~/bundles/jquery")
      @Scripts.Render("~/bundles/bootstrap")
      @Scripts.Render("~/bundles/custom")
   }
   <script type="text/javascript">
      $(document).ready(function () {
         debugger;

         $('[type="datetime"]').attr('disabled', true);
         $('[type="date"]').attr('disabled', true);

         if ($('[type="datetime"]')) {
            $('[type="datetime"]').datepicker();
         };
      });
   </script>

}