@model LMS.Models.BookIssue
@{
   ViewBag.Title = "Index";
}
<center>
   <h2>Book Issue</h2>
</center>
<div class="p-2">
   <a class="btn btn-success" style="margin-bottom:10px" onclick="PopupForm('@Url.Action("GetIssuedBook")/0', 'Book Issue', 450)">
      <i class="fa fa-plus"></i>  Issue New Book</a>
   @{ Html.RenderPartial("_FilterData"); }
   <table id="BookIssueTable" class="table table-striped table-bordered" style="width: 100%">
      <thead>
         <tr>
            <th>Id</th>
            <th>BookCode</th>
            <th>BookName</th>
            <th>IssuedForName</th>
            <th>IssuedByName</th>
            <th>ReceivedByName</th>
            <th>Remarks</th>
            <th>IsDeleted</th>
            <th>Control</th>
         </tr>
      </thead>
   </table>
</div>
@section scripts{
   @Scripts.Render("~/bundles/DataTables")
   <script src="../../Content/LMSCustom/LMSCommon.js" type="text/javascript"></script>
   <script type="text/javascript">
      $(document).ready(function () {
         bindDatatable(0);
      });

      $('#filterRecord').find('input').change(function() {
         bindDatatable(this.value)
      });

      function bindDatatable(displayRecords)
      {
         if($('#BookIssueTable'))
         {
            $('#BookIssueTable').dataTable({
               "bDestroy": true
            }).fnDestroy();
         }

         var editUrl = '@Url.Action("GetIssuedBook")/';
         var deleteUrl = '@Url.Action("IssueBook")';

         dataTable =  $("#BookIssueTable").DataTable({
            "ajax": {
               "url": "/Book/GetIssuedBooks/",
               "data": { "displayRecords" : displayRecords },
               "type": "GET",
               "datatype": "json"
            },
            "columns": [
               { "data": "Id" },
               { "data": "BookCode" },
               { "data": "BookName" },
               { "data": "IssuedForName" },
               { "data": "IssuedByName" },
               { "data": "ReceivedByName" },
               { "data": "Remarks" },
               { "data": "IsDeleted" },
               { "data": "Id" ,
               "render" : function (data, isDeleted) {
                  return "<a class='btn btn-primary btn-sm" + (data.IsDeleted ? " disabled" : "") + "' onclick=PopupForm('" + editUrl + data + "','BookIssue',450)>"
                  + " <i class='fa fa-pencil'></i> Edit</a>"
                  + " <a class='btn btn-danger btn-sm' style='margin-left:5px' onclick=Delete(" + data + ",'BookIssue','" + deleteUrl + "')>"
                  + " <i class='fa fa-trash'></i> Delete</a>";
               },
                  "orderable": false,
                  "searchable":true,
               }
            ],
            "language": {
               "emptyTable" : "No authors found, Please click on <b>Add New</b> Button",  
               "processing" : "<i class='fa fa-spinner fa-spin fa-3x fa-fw' style='color:#2a2b2b;'></i><span class='sr-only'>Loading...</span>" 
            }
         });
      };
   </script>
}
