@model LMS.Models.UserInfo
@{
   if (Session["UserId"] == null)
   {
      Response.Redirect("~/Login/Index");
   }
}
@using (Html.BeginForm("Index", "User", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
@*@Html.AntiForgeryToken()*@
   <div class="row m-2">
      <div class="form-group col-md-12">
         <h3 class="color:Navy">
            <center>
               <b>Welcome @Session["userName"].ToString()... </b>
            </center>
         </h3>
         <hr id="hrHeader" />
      </div>
      @Html.HiddenFor(model => model.Id)
      @Html.HiddenFor(model => model.Userid)

      <div class="form-group col-md-9 my-0 py-0">
         <div class="row">
            <div class="form-group col-md-4">
               @Html.LabelFor(model => model.FirstName, new { @class = "control-label" })
               @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
               @Html.ValidationMessageFor(model => model.FirstName)
            </div>
            <div class="form-group col-md-4">
               @Html.LabelFor(model => model.MiddleName, new { @class = "control-label" })
               @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
               @Html.ValidationMessageFor(model => model.MiddleName)
            </div>
            <div class="form-group col-md-4">
               @Html.LabelFor(model => model.LastName, new { @class = "control-label" })
               @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
               @Html.ValidationMessageFor(model => model.LastName)
            </div>
            <div class="form-group col-md-12">
               @Html.LabelFor(model => model.Address1, new { @class = "control-label" })
               @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
               @Html.ValidationMessageFor(model => model.Address1)
            </div>
            <div class="form-group col-md-12">
               @Html.LabelFor(model => model.Address2, new { @class = "control-label" })
               @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
               @Html.ValidationMessageFor(model => model.Address2)
            </div>
         </div>
      </div>
      <div class="form-group col-md-3 my-0 py-0" data-toggle="tooltip" data-placement="top" title="Change Profile Picture">
         <img id="profilePic" class="rounded" src="../../Content/Images/UserImage.png" alt="Profile Picture"
            style="max-width: 100%; height: auto;" />
      </div>
      <div class="form-group col-md-3">
         @Html.LabelFor(model => model.City, new { @class = "control-label" })
         @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
         @Html.ValidationMessageFor(model => model.City)
      </div>
      <div class="form-group col-md-3">
         @Html.LabelFor(model => model.State, new { @class = "control-label" })
         @Html.DropDownListFor(model => model.State, LMS.Utilities.DropdownListHelper.DDLForState(), "Select State", new { htmlAttributes = new { @class = "form-control" } })
         @Html.ValidationMessageFor(model => model.State)
      </div>
      <div class="form-group col-md-3">
         @Html.LabelFor(model => model.Pincode, new { @class = "control-label" })
         @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control" } })
         @Html.ValidationMessageFor(model => model.Pincode)
      </div>
      <div class="form-group col-md-3" disabled readonly>
         @Html.LabelFor(model => model.Country, new { @class = "control-label" })
         @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
         @Html.ValidationMessageFor(model => model.Country)
      </div>
      <div class="form-group col-md-3">
         @Html.LabelFor(model => model.MobileNo, new { @class = "control-label" })
         @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
         @Html.ValidationMessageFor(model => model.MobileNo)
      </div>
      <div class="form-group col-md-3">
         @Html.LabelFor(model => model.HomeContactNo, new { @class = "control-label" })
         @Html.EditorFor(model => model.HomeContactNo, new { htmlAttributes = new { @class = "form-control" } })
         @Html.ValidationMessageFor(model => model.HomeContactNo)
      </div>
      <div class="form-group col-md-6">
         @Html.Label("", new { @class = "control-label" })
         <button type="submit" class="btn btn-primary float-right float-bottom mt-4 ml-2">
            Save changes</button>
         <button type="reset" class="btn btn-secondary float-right float-bottom mt-4 mr-2">
            Reset</button>
      </div>
   </div>
   @section Scripts {
      <script src="../../Content/LMSCustom/UserProfile.js" type="text/javascript"></script>
   }
}